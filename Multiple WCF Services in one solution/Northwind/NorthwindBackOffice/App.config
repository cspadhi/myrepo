<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <system.serviceModel>
        <bindings>
            <netNamedPipeBinding>
                <binding name="NetNamedPipeBinding_ICustomerService" closeTimeout="00:01:00"
                    openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
                    transactionFlow="false" transferMode="Buffered" transactionProtocol="OleTransactions"
                    hostNameComparisonMode="StrongWildcard" maxBufferPoolSize="524288"
                    maxBufferSize="65536" maxConnections="10" maxReceivedMessageSize="65536">
                    <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
                        maxBytesPerRead="4096" maxNameTableCharCount="16384" />
                    <security mode="Transport">
                        <transport protectionLevel="EncryptAndSign" />
                    </security>
                </binding>
                <binding name="NetNamedPipeBinding_IOrderService" closeTimeout="00:01:00"
                    openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
                    transactionFlow="false" transferMode="Buffered" transactionProtocol="OleTransactions"
                    hostNameComparisonMode="StrongWildcard" maxBufferPoolSize="524288"
                    maxBufferSize="65536" maxConnections="10" maxReceivedMessageSize="65536">
                    <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
                        maxBytesPerRead="4096" maxNameTableCharCount="16384" />
                    <security mode="Transport">
                        <transport protectionLevel="EncryptAndSign" />
                    </security>
                </binding>
            </netNamedPipeBinding>
            <wsHttpBinding>
                <binding name="WSHttpBinding_ICustomerService" closeTimeout="00:01:00"
                    openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
                    bypassProxyOnLocal="false" transactionFlow="false" hostNameComparisonMode="StrongWildcard"
                    maxBufferPoolSize="524288" maxReceivedMessageSize="65536"
                    messageEncoding="Text" textEncoding="utf-8" useDefaultWebProxy="true"
                    allowCookies="false">
                    <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
                        maxBytesPerRead="4096" maxNameTableCharCount="16384" />
                    <reliableSession ordered="true" inactivityTimeout="00:10:00"
                        enabled="false" />
                    <security mode="Message">
                        <transport clientCredentialType="Windows" proxyCredentialType="None"
                            realm="" />
                        <message clientCredentialType="Windows" negotiateServiceCredential="true"
                            algorithmSuite="Default" />
                    </security>
                </binding>
                <binding name="WSHttpBinding_IOrderService" closeTimeout="00:01:00"
                    openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
                    bypassProxyOnLocal="false" transactionFlow="false" hostNameComparisonMode="StrongWildcard"
                    maxBufferPoolSize="524288" maxReceivedMessageSize="65536"
                    messageEncoding="Text" textEncoding="utf-8" useDefaultWebProxy="true"
                    allowCookies="false">
                    <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
                        maxBytesPerRead="4096" maxNameTableCharCount="16384" />
                    <reliableSession ordered="true" inactivityTimeout="00:10:00"
                        enabled="false" />
                    <security mode="Message">
                        <transport clientCredentialType="Windows" proxyCredentialType="None"
                            realm="" />
                        <message clientCredentialType="Windows" negotiateServiceCredential="true"
                            algorithmSuite="Default" />
                    </security>
                </binding>
            </wsHttpBinding>
        </bindings>
        <client>
            <endpoint address="http://localhost:7741/NorthwindServices/Services/CustomerService"
                binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_ICustomerService"
                contract="CustomerServiceRef.ICustomerService" name="WSHttpBinding_ICustomerService">
                <identity>
                    <servicePrincipalName value="host/CORPNQE8503A.hca.corpad.net" />
                </identity>
            </endpoint>
            <endpoint address="net.pipe://localhost/Services/CustomerService"
                binding="netNamedPipeBinding" bindingConfiguration="NetNamedPipeBinding_ICustomerService"
                contract="CustomerServiceRef.ICustomerService" name="NetNamedPipeBinding_ICustomerService">
                <identity>
                    <servicePrincipalName value="host/CORPNQE8503A.hca.corpad.net" />
                </identity>
            </endpoint>
            <endpoint address="http://localhost:7741/NorthwindServices/Services/OrderService"
                binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_IOrderService"
                contract="OrderServiceRef.IOrderService" name="WSHttpBinding_IOrderService">
                <identity>
                    <servicePrincipalName value="host/CORPNQE8503A.hca.corpad.net" />
                </identity>
            </endpoint>
            <endpoint address="net.pipe://localhost/Services/OrderService"
                binding="netNamedPipeBinding" bindingConfiguration="NetNamedPipeBinding_IOrderService"
                contract="OrderServiceRef.IOrderService" name="NetNamedPipeBinding_IOrderService">
                <identity>
                    <servicePrincipalName value="host/CORPNQE8503A.hca.corpad.net" />
                </identity>
            </endpoint>
        </client>
    </system.serviceModel>
</configuration>